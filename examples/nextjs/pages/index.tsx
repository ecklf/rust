import clsx from 'clsx';
import Head from 'next/head';
import { Inter } from 'next/font/google';
import { useState } from 'react';
import Button from '@/components/button';

interface Data {
  runtime: 'node';
  message: string;
  time: string;
  pi: number;
}

const inter = Inter({ subsets: ['latin'] });

function Home(): JSX.Element {
  const [rustResult, setRustResult] = useState<Data | null>(null);
  const [tsResult, setTsResult] = useState<Data | null>(null);

  async function fetchRust() {
    const res = await fetch('/api/rust');
    const data = await res.json();
    setRustResult(data);
  }

  async function fetchTS() {
    const res = await fetch('/api/typescript');
    const data = await res.json();
    setTsResult(data);
  }

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="w-full mx-auto max-w-screen-xl h-screen flex items-center justify-center">
        <div className="w-full grid grid-cols-2 gap-6">
          <section className="col-span-1">
            <div
              className={clsx(
                'relative flex h-full w-full p-6 rounded-xl shadow bg-gray-800',
              )}
            >
              <div className="mt-8 flex flex-col space-y-4 ">
                <span className="text-white font-medium">
                  <span className="font-bold">Time</span>:{' '}
                  {rustResult?.time ?? 'N/A'}
                </span>
                <p className="text-white font-medium">
                  <span className="font-bold">Message:</span>{' '}
                  {rustResult?.message ?? 'N/A'}
                </p>
                <p className="text-white font-medium">
                  <span className="font-bold">Pi:</span>{' '}
                  {rustResult?.pi ?? 'N/A'}
                </p>
              </div>

              <div className="absolute inset-x-0 top-0 rounded-t-xl flex items-center justify-between px-4 py-2.5 bg-black/20">
                <div className="flex items-center space-x-2">
                  <p className="text-gray-100 select-none text-sm font-medium">
                    Rust
                  </p>
                </div>
              </div>
            </div>
          </section>

          <section className="col-span-1">
            <div
              className={clsx(
                'relative flex h-full w-full p-6 rounded-xl shadow bg-gray-800',
              )}
            >
              <div className="mt-8 flex flex-col space-y-4 ">
                <p className="text-white font-medium">
                  <span className="font-bold">Time:</span>{' '}
                  {tsResult?.time ?? 'N/A'}
                </p>
                <p className="text-white font-medium">
                  <span className="font-bold">Message:</span>{' '}
                  {tsResult?.message ?? 'N/A'}
                </p>
                <p className="text-white font-medium">
                  <span className="font-bold">Pi:</span> {tsResult?.pi ?? 'N/A'}
                </p>
              </div>
              <div className="absolute inset-x-0 top-0 rounded-t-xl flex items-center justify-between px-4 py-2.5 bg-black/20">
                <div className="flex items-center space-x-2">
                  <p className="text-gray-100 select-none text-sm font-medium">
                    TypeScript
                  </p>
                </div>
              </div>
            </div>
          </section>

          <Button
            onClick={async () => {
              await Promise.all([fetchTS(), fetchRust()]);
            }}
          >
            Calculate Pi with PRNG
          </Button>

          <div className="px-3 flex items-center text-white font-medium text-sm bg-gray-800 rounded-md">
            <span className="font-bold">Info:</span>&nbsp;Calculates Pi using
            random numbers - PRNG algorithm
          </div>
        </div>
      </main>
    </>
  );
}

export default Home;
